{"version":3,"file":"normy.min.js","mappings":"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","sources":["webpack://Normy/webpack/universalModuleDefinition","webpack://Normy/../../node_modules/.pnpm/deepmerge@4.0.0/node_modules/deepmerge/dist/cjs.js","webpack://Normy/webpack/bootstrap","webpack://Normy/webpack/runtime/compat get default export","webpack://Normy/webpack/runtime/define property getters","webpack://Normy/webpack/runtime/hasOwnProperty shorthand","webpack://Normy/webpack/runtime/make namespace object","webpack://Normy/../../node_modules/.pnpm/@babel+runtime@7.23.5/node_modules/@babel/runtime/helpers/esm/extends.js","webpack://Normy/./src/default-config.ts","webpack://Normy/./src/merge-data.ts","webpack://Normy/./src/normalize.ts","webpack://Normy/./src/denormalize.ts","webpack://Normy/./src/create-normalizer.ts","webpack://Normy/./src/get-dependencies-diff.ts","webpack://Normy/./src/add-or-remove-dependencies.ts","webpack://Normy/./src/get-queries-dependent-on-mutation.ts","webpack://Normy/./src/get-id.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Normy\"] = factory();\n\telse\n\t\troot[\"Normy\"] = factory();\n})(self, () => {\nreturn ","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","import { NormalizerConfig } from './types';\n\nexport const defaultConfig: Required<NormalizerConfig> = {\n  getNormalizationObjectKey: obj => obj.id as string | undefined,\n  devLogging: false,\n  structuralSharing: true,\n};\n","import deepmerge from 'deepmerge';\n\nimport { Data } from './types';\n\nexport const mergeData = <T = Data>(oldData: T, newData: T) =>\n  deepmerge<T>(oldData, newData, {\n    arrayMerge: (destinationArray: Data[], sourceArray: Data[]) => sourceArray,\n    clone: false,\n  });\n","import { defaultConfig } from './default-config';\nimport { mergeData } from './merge-data';\nimport {\n  Data,\n  NormalizerConfig,\n  DataPrimitiveArray,\n  DataObject,\n  UsedKeys,\n} from './types';\n\nconst stipFromDeps = (\n  data: Data,\n  config: Required<NormalizerConfig>,\n  root = true,\n): Data => {\n  if (Array.isArray(data)) {\n    return data.map(v => stipFromDeps(v, config)) as\n      | DataPrimitiveArray\n      | DataObject[];\n  }\n\n  if (data !== null && typeof data === 'object' && !(data instanceof Date)) {\n    const objectKey = config.getNormalizationObjectKey(data);\n\n    if (objectKey !== undefined && root) {\n      return `@@${objectKey}`;\n    }\n\n    return Object.entries(data).reduce((prev, [k, v]) => {\n      prev[k] = stipFromDeps(v, config);\n\n      return prev;\n    }, {} as DataObject);\n  }\n\n  return data;\n};\n\nexport const getDependencies = (\n  data: Data,\n  config = defaultConfig,\n  usedKeys?: UsedKeys,\n  path = '',\n): [DataObject[], UsedKeys] => {\n  usedKeys = usedKeys || {};\n\n  if (Array.isArray(data)) {\n    return [\n      (data as DataObject[]).reduce(\n        (prev: DataObject[], current: Data) => [\n          ...prev,\n          ...getDependencies(current, config, usedKeys, path)[0],\n        ],\n        [] as DataObject[],\n      ),\n      usedKeys,\n    ];\n  }\n\n  if (data !== null && typeof data === 'object' && !(data instanceof Date)) {\n    if (config.getNormalizationObjectKey(data) !== undefined) {\n      usedKeys[path] = Object.keys(data);\n    }\n\n    return [\n      Object.entries(data).reduce(\n        (prev, [k, v]) => [\n          ...prev,\n          ...getDependencies(v, config, usedKeys, `${path}.${k}`)[0],\n        ],\n        config.getNormalizationObjectKey(data) !== undefined ? [data] : [],\n      ),\n      usedKeys,\n    ];\n  }\n\n  return [[], usedKeys];\n};\n\nexport const normalize = (\n  data: Data,\n  config = defaultConfig,\n): [Data, { [objectId: string]: DataObject }, UsedKeys] => {\n  const [dependencies, usedKeys] = getDependencies(data, config);\n\n  return [\n    stipFromDeps(data, config, true),\n    dependencies.reduce(\n      (prev, v) => {\n        const key = config.getNormalizationObjectKey(v) as string;\n\n        prev[`@@${key}`] = prev[`@@${key}`]\n          ? mergeData(prev[`@@${key}`], stipFromDeps(v, config, false))\n          : stipFromDeps(v, config, false);\n\n        return prev;\n      },\n      {} as { [objectId: string]: DataObject },\n    ) as {\n      [objectId: string]: DataObject;\n    },\n    usedKeys,\n  ];\n};\n","import { Data, DataObject, DataPrimitiveArray, UsedKeys } from './types';\n\nexport const denormalize = (\n  data: Data,\n  normalizedData: { [key: string]: Data },\n  usedKeys: UsedKeys,\n  path = '',\n): Data => {\n  if (typeof data === 'string' && data.startsWith('@@')) {\n    return denormalize(normalizedData[data], normalizedData, usedKeys, path);\n  } else if (Array.isArray(data)) {\n    return data.map(value =>\n      denormalize(value, normalizedData, usedKeys, path),\n    ) as DataPrimitiveArray | DataObject[];\n  } else if (\n    data !== null &&\n    typeof data === 'object' &&\n    !(data instanceof Date)\n  ) {\n    const objectEntries = usedKeys[path]\n      ? Object.entries(data).filter(([k]) => usedKeys[path].includes(k))\n      : Object.entries(data);\n\n    return objectEntries.reduce((prev, [k, v]) => {\n      prev[k] = denormalize(v, normalizedData, usedKeys, `${path}.${k}`);\n\n      return prev;\n    }, {} as DataObject);\n  }\n\n  return data;\n};\n","import { normalize } from './normalize';\nimport { denormalize } from './denormalize';\nimport { mergeData } from './merge-data';\nimport { defaultConfig } from './default-config';\nimport { addOrRemoveDependencies } from './add-or-remove-dependencies';\nimport { getQueriesDependentOnMutation } from './get-queries-dependent-on-mutation';\nimport { getDependenciesDiff } from './get-dependencies-diff';\nimport { warning } from './warning';\nimport { Data, NormalizerConfig, NormalizedData, DataObject } from './types';\n\nconst initialData: NormalizedData = {\n  queries: {},\n  objects: {},\n  dependentQueries: {},\n};\n\nconst isMutationObjectDifferent = (\n  mutationData: Data,\n  normalizedData: Data,\n): boolean => {\n  if (Array.isArray(mutationData) && Array.isArray(normalizedData)) {\n    if (mutationData.length === 0) {\n      return normalizedData.length !== 0;\n    }\n\n    return mutationData.some((v, i) =>\n      isMutationObjectDifferent(v, (normalizedData as Data[])[i]),\n    );\n  }\n\n  if (mutationData instanceof Date && normalizedData instanceof Date) {\n    return mutationData.getTime() !== normalizedData.getTime();\n  }\n\n  if (\n    mutationData !== null &&\n    typeof mutationData === 'object' &&\n    normalizedData !== null &&\n    typeof normalizedData === 'object'\n  ) {\n    return Object.entries(mutationData).some(\n      ([key, value]) =>\n        (normalizedData as DataObject)?.[key] !== undefined &&\n        isMutationObjectDifferent(\n          value as Data,\n          (normalizedData as DataObject)[key],\n        ),\n    );\n  }\n\n  return mutationData !== normalizedData;\n};\n\nexport const createNormalizer = (\n  normalizerConfig?: NormalizerConfig,\n  initialNormalizedData?: NormalizedData,\n) => {\n  const config = { ...defaultConfig, ...normalizerConfig };\n\n  let normalizedData: NormalizedData = initialNormalizedData ?? initialData;\n  let currentDataReferences: Record<string, Data> = {};\n\n  const setQuery = (queryKey: string, queryData: Data) => {\n    if (config.structuralSharing) {\n      if (currentDataReferences[queryKey] === queryData) {\n        return;\n      }\n\n      currentDataReferences[queryKey] = queryData;\n    }\n\n    const [normalizedQueryData, normalizedObjectsData, usedKeys] = normalize(\n      queryData,\n      config,\n    );\n\n    const { addedDependencies, removedDependencies } = getDependenciesDiff(\n      normalizedData.queries[queryKey]\n        ? normalizedData.queries[queryKey].dependencies\n        : [],\n      Object.keys(normalizedObjectsData),\n    );\n\n    normalizedData = {\n      queries: {\n        ...normalizedData.queries,\n        [queryKey]: {\n          data: normalizedQueryData,\n          usedKeys,\n          dependencies: Object.keys(normalizedObjectsData),\n        },\n      },\n      ...addOrRemoveDependencies(\n        normalizedData.dependentQueries,\n        mergeData(normalizedData.objects, normalizedObjectsData),\n        queryKey,\n        addedDependencies,\n        removedDependencies,\n      ),\n    };\n\n    warning(\n      config.devLogging,\n      'set query:',\n      queryKey,\n      '\\nwith data:',\n      queryData,\n      '\\nnormalizedData:',\n      normalizedData,\n    );\n  };\n\n  const removeQuery = (queryKey: string) => {\n    setQuery(queryKey, null);\n\n    const queries = { ...normalizedData.queries };\n    delete queries[queryKey];\n    delete currentDataReferences[queryKey];\n\n    normalizedData = {\n      ...normalizedData,\n      queries,\n    };\n\n    warning(\n      config.devLogging,\n      'removed query:',\n      queryKey,\n      '\\nnormalizedData:',\n      normalizedData,\n    );\n  };\n\n  const filterMutationObjects = (\n    mutationObjects: DataObject,\n    normalizedDataObjects: DataObject,\n  ) => {\n    const differentObjects: DataObject = {};\n\n    for (const key in mutationObjects) {\n      if (\n        isMutationObjectDifferent(\n          mutationObjects[key],\n          normalizedDataObjects[key],\n        )\n      ) {\n        differentObjects[key] = mutationObjects[key];\n      }\n    }\n\n    return differentObjects;\n  };\n\n  const getQueriesToUpdate = (mutationData: Data) => {\n    const [, normalizedObjectsData] = normalize(mutationData, config);\n\n    const updatedObjects = filterMutationObjects(\n      normalizedObjectsData,\n      normalizedData.objects,\n    );\n\n    const normalizedDataWithMutation = mergeData(\n      normalizedData.objects,\n      updatedObjects,\n    );\n\n    const foundQueries = getQueriesDependentOnMutation(\n      normalizedData.dependentQueries,\n      Object.keys(updatedObjects),\n    );\n\n    return foundQueries.map(queryKey => ({\n      queryKey,\n      data: denormalize(\n        normalizedData.queries[queryKey].data,\n        normalizedDataWithMutation,\n        normalizedData.queries[queryKey].usedKeys,\n      ),\n    }));\n  };\n\n  const getQueryFragment = <T extends Data>(\n    fragment: Data,\n    exampleObject?: T,\n  ): T | undefined => {\n    let usedKeys = {};\n\n    if (exampleObject) {\n      const [, , keys] = normalize(exampleObject, config);\n      usedKeys = keys;\n    }\n\n    try {\n      const response = denormalize(fragment, normalizedData.objects, usedKeys);\n      return response as T;\n    } catch (error) {\n      if (error instanceof RangeError) {\n        warning(\n          true,\n          'Recursive dependency detected. Pass example object as second argument.',\n        );\n\n        return undefined;\n      }\n\n      throw error;\n    }\n  };\n\n  const getObjectById = <T extends Data>(\n    id: string,\n    exampleObject?: T,\n  ): T | undefined => getQueryFragment(`@@${id}`, exampleObject);\n\n  return {\n    getNormalizedData: () => normalizedData,\n    clearNormalizedData: () => {\n      normalizedData = initialData;\n      currentDataReferences = {};\n    },\n    setQuery,\n    removeQuery,\n    getQueriesToUpdate,\n    getObjectById,\n    getQueryFragment,\n  };\n};\n","export const getDependenciesDiff = (\n  oldDependencies: ReadonlyArray<string>,\n  newDependencies: ReadonlyArray<string>,\n) => ({\n  addedDependencies: newDependencies.filter(\n    newDependency => !oldDependencies.includes(newDependency),\n  ),\n  removedDependencies: oldDependencies.filter(\n    oldDependency => !newDependencies.includes(oldDependency),\n  ),\n});\n","import { NormalizedData } from './types';\n\nexport const addOrRemoveDependencies = (\n  dependentQueries: NormalizedData['dependentQueries'],\n  objects: NormalizedData['objects'],\n  queryKey: string,\n  dependenciesToAdd: ReadonlyArray<string>,\n  dependenciesToRemove: ReadonlyArray<string>,\n) => {\n  dependentQueries = { ...dependentQueries };\n  objects = { ...objects };\n\n  dependenciesToAdd.forEach(dependency => {\n    if (!dependentQueries[dependency]) {\n      dependentQueries[dependency] = [queryKey];\n    }\n\n    if (!dependentQueries[dependency].includes(queryKey)) {\n      dependentQueries[dependency] = [\n        ...dependentQueries[dependency],\n        queryKey,\n      ];\n    }\n  });\n\n  dependenciesToRemove.forEach(dependency => {\n    if (dependentQueries[dependency].length > 1) {\n      dependentQueries[dependency] = dependentQueries[dependency].filter(\n        v => v !== queryKey,\n      );\n    } else {\n      delete dependentQueries[dependency];\n      delete objects[dependency];\n    }\n  });\n\n  return { dependentQueries, objects };\n};\n","import { NormalizedData } from './types';\n\nexport const getQueriesDependentOnMutation = (\n  dependentQueries: NormalizedData['dependentQueries'],\n  mutationDependencies: ReadonlyArray<string>,\n): ReadonlyArray<string> => {\n  const queries: string[] = [];\n\n  mutationDependencies.forEach(dependency => {\n    if (dependentQueries[dependency]) {\n      queries.push(...dependentQueries[dependency]);\n    }\n  });\n\n  return Array.from(new Set(queries));\n};\n","export const getId = (id: string) => `@@${id}`;\n"],"names":["root","factory","exports","module","define","amd","self","isMergeableObject","value","isNonNullObject","stringValue","Object","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","options","clone","deepmerge","val","Array","isArray","defaultArrayMerge","target","source","concat","map","element","getKeys","keys","getOwnPropertySymbols","filter","symbol","propertyIsEnumerable","getEnumerableOwnPropertySymbols","arrayMerge","sourceIsArray","destination","forEach","key","customMerge","getMergeFunction","mergeObject","all","array","Error","reduce","prev","next","deepmerge_1","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","hasOwnProperty","r","toStringTag","_extends","assign","bind","i","arguments","length","apply","this","defaultConfig","getNormalizationObjectKey","id","devLogging","structuralSharing","mergeData","oldData","newData","destinationArray","sourceArray","stipFromDeps","data","config","v","Date","objectKey","entries","_ref","k","getDependencies","usedKeys","path","current","_ref2","normalize","_getDependencies","dependencies","denormalize","normalizedData","startsWith","includes","initialData","queries","objects","dependentQueries","isMutationObjectDifferent","mutationData","some","getTime","createNormalizer","normalizerConfig","initialNormalizedData","currentDataReferences","setQuery","queryKey","queryData","_extends2","oldDependencies","newDependencies","_normalize","normalizedQueryData","normalizedObjectsData","_getDependenciesDiff","addedDependencies","newDependency","removedDependencies","oldDependency","dependenciesToAdd","dependenciesToRemove","dependency","addOrRemoveDependencies","getQueryFragment","fragment","exampleObject","error","RangeError","getNormalizedData","clearNormalizedData","removeQuery","getQueriesToUpdate","mutationDependencies","updatedObjects","mutationObjects","normalizedDataObjects","differentObjects","filterMutationObjects","normalizedDataWithMutation","push","from","Set","getObjectById","getId"],"sourceRoot":""}