{"version":3,"file":"normy.js","mappings":"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","sources":["webpack://Normy/webpack/universalModuleDefinition","webpack://Normy/./src/add-or-remove-dependencies.ts","webpack://Normy/./src/create-normalizer.ts","webpack://Normy/./src/default-config.ts","webpack://Normy/./src/denormalize.ts","webpack://Normy/./src/get-dependencies-diff.ts","webpack://Normy/./src/get-id.ts","webpack://Normy/./src/get-queries-dependent-on-mutation.ts","webpack://Normy/./src/merge-data.ts","webpack://Normy/./src/normalize.ts","webpack://Normy/./src/warning.ts","webpack://Normy/../../node_modules/.pnpm/deepmerge@4.0.0/node_modules/deepmerge/dist/cjs.js","webpack://Normy/../../node_modules/.pnpm/@babel+runtime@7.23.5/node_modules/@babel/runtime/helpers/esm/extends.js","webpack://Normy/webpack/bootstrap","webpack://Normy/webpack/runtime/compat get default export","webpack://Normy/webpack/runtime/define property getters","webpack://Normy/webpack/runtime/hasOwnProperty shorthand","webpack://Normy/webpack/runtime/make namespace object","webpack://Normy/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Normy\"] = factory();\n\telse\n\t\troot[\"Normy\"] = factory();\n})(self, () => {\nreturn ","import { NormalizedData } from './types';\n\nexport const addOrRemoveDependencies = (\n  dependentQueries: NormalizedData['dependentQueries'],\n  objects: NormalizedData['objects'],\n  queryKey: string,\n  dependenciesToAdd: ReadonlyArray<string>,\n  dependenciesToRemove: ReadonlyArray<string>,\n) => {\n  dependentQueries = { ...dependentQueries };\n  objects = { ...objects };\n\n  dependenciesToAdd.forEach(dependency => {\n    if (!dependentQueries[dependency]) {\n      dependentQueries[dependency] = [queryKey];\n    }\n\n    if (!dependentQueries[dependency].includes(queryKey)) {\n      dependentQueries[dependency] = [\n        ...dependentQueries[dependency],\n        queryKey,\n      ];\n    }\n  });\n\n  dependenciesToRemove.forEach(dependency => {\n    if (dependentQueries[dependency].length > 1) {\n      dependentQueries[dependency] = dependentQueries[dependency].filter(\n        v => v !== queryKey,\n      );\n    } else {\n      delete dependentQueries[dependency];\n      delete objects[dependency];\n    }\n  });\n\n  return { dependentQueries, objects };\n};\n","import { normalize } from './normalize';\nimport { denormalize } from './denormalize';\nimport { mergeData } from './merge-data';\nimport { defaultConfig } from './default-config';\nimport { addOrRemoveDependencies } from './add-or-remove-dependencies';\nimport { getQueriesDependentOnMutation } from './get-queries-dependent-on-mutation';\nimport { getDependenciesDiff } from './get-dependencies-diff';\nimport { warning } from './warning';\nimport { Data, NormalizerConfig, NormalizedData, DataObject } from './types';\n\nconst initialData: NormalizedData = {\n  queries: {},\n  objects: {},\n  dependentQueries: {},\n};\n\nconst isMutationObjectDifferent = (\n  mutationData: Data,\n  normalizedData: Data,\n): boolean => {\n  if (Array.isArray(mutationData) && Array.isArray(normalizedData)) {\n    if (mutationData.length === 0) {\n      return normalizedData.length !== 0;\n    }\n\n    return mutationData.some((v, i) =>\n      isMutationObjectDifferent(v, (normalizedData as Data[])[i]),\n    );\n  }\n\n  if (mutationData instanceof Date && normalizedData instanceof Date) {\n    return mutationData.getTime() !== normalizedData.getTime();\n  }\n\n  if (\n    mutationData !== null &&\n    typeof mutationData === 'object' &&\n    normalizedData !== null &&\n    typeof normalizedData === 'object'\n  ) {\n    return Object.entries(mutationData).some(\n      ([key, value]) =>\n        (normalizedData as DataObject)?.[key] !== undefined &&\n        isMutationObjectDifferent(\n          value as Data,\n          (normalizedData as DataObject)[key],\n        ),\n    );\n  }\n\n  return mutationData !== normalizedData;\n};\n\nexport const createNormalizer = (\n  normalizerConfig?: NormalizerConfig,\n  initialNormalizedData?: NormalizedData,\n) => {\n  const config = { ...defaultConfig, ...normalizerConfig };\n\n  let normalizedData: NormalizedData = initialNormalizedData ?? initialData;\n  let currentDataReferences: Record<string, Data> = {};\n\n  const setQuery = (queryKey: string, queryData: Data) => {\n    if (config.structuralSharing) {\n      if (currentDataReferences[queryKey] === queryData) {\n        return;\n      }\n\n      currentDataReferences[queryKey] = queryData;\n    }\n\n    const [normalizedQueryData, normalizedObjectsData, usedKeys] = normalize(\n      queryData,\n      config,\n    );\n\n    const { addedDependencies, removedDependencies } = getDependenciesDiff(\n      normalizedData.queries[queryKey]\n        ? normalizedData.queries[queryKey].dependencies\n        : [],\n      Object.keys(normalizedObjectsData),\n    );\n\n    normalizedData = {\n      queries: {\n        ...normalizedData.queries,\n        [queryKey]: {\n          data: normalizedQueryData,\n          usedKeys,\n          dependencies: Object.keys(normalizedObjectsData),\n        },\n      },\n      ...addOrRemoveDependencies(\n        normalizedData.dependentQueries,\n        mergeData(normalizedData.objects, normalizedObjectsData),\n        queryKey,\n        addedDependencies,\n        removedDependencies,\n      ),\n    };\n\n    warning(\n      config.devLogging,\n      'set query:',\n      queryKey,\n      '\\nwith data:',\n      queryData,\n      '\\nnormalizedData:',\n      normalizedData,\n    );\n  };\n\n  const removeQuery = (queryKey: string) => {\n    setQuery(queryKey, null);\n\n    const queries = { ...normalizedData.queries };\n    delete queries[queryKey];\n    delete currentDataReferences[queryKey];\n\n    normalizedData = {\n      ...normalizedData,\n      queries,\n    };\n\n    warning(\n      config.devLogging,\n      'removed query:',\n      queryKey,\n      '\\nnormalizedData:',\n      normalizedData,\n    );\n  };\n\n  const filterMutationObjects = (\n    mutationObjects: DataObject,\n    normalizedDataObjects: DataObject,\n  ) => {\n    const differentObjects: DataObject = {};\n\n    for (const key in mutationObjects) {\n      if (\n        isMutationObjectDifferent(\n          mutationObjects[key],\n          normalizedDataObjects[key],\n        )\n      ) {\n        differentObjects[key] = mutationObjects[key];\n      }\n    }\n\n    return differentObjects;\n  };\n\n  const getQueriesToUpdate = (mutationData: Data) => {\n    const [, normalizedObjectsData] = normalize(mutationData, config);\n\n    const updatedObjects = filterMutationObjects(\n      normalizedObjectsData,\n      normalizedData.objects,\n    );\n\n    const normalizedDataWithMutation = mergeData(\n      normalizedData.objects,\n      updatedObjects,\n    );\n\n    const foundQueries = getQueriesDependentOnMutation(\n      normalizedData.dependentQueries,\n      Object.keys(updatedObjects),\n    );\n\n    return foundQueries.map(queryKey => ({\n      queryKey,\n      data: denormalize(\n        normalizedData.queries[queryKey].data,\n        normalizedDataWithMutation,\n        normalizedData.queries[queryKey].usedKeys,\n      ),\n    }));\n  };\n\n  const getQueryFragment = <T extends Data>(\n    fragment: Data,\n    exampleObject?: T,\n  ): T | undefined => {\n    let usedKeys = {};\n\n    if (exampleObject) {\n      const [, , keys] = normalize(exampleObject, config);\n      usedKeys = keys;\n    }\n\n    try {\n      const response = denormalize(fragment, normalizedData.objects, usedKeys);\n      return response as T;\n    } catch (error) {\n      if (error instanceof RangeError) {\n        warning(\n          true,\n          'Recursive dependency detected. Pass example object as second argument.',\n        );\n\n        return undefined;\n      }\n\n      throw error;\n    }\n  };\n\n  const getObjectById = <T extends Data>(\n    id: string,\n    exampleObject?: T,\n  ): T | undefined => getQueryFragment(`@@${id}`, exampleObject);\n\n  return {\n    getNormalizedData: () => normalizedData,\n    clearNormalizedData: () => {\n      normalizedData = initialData;\n      currentDataReferences = {};\n    },\n    setQuery,\n    removeQuery,\n    getQueriesToUpdate,\n    getObjectById,\n    getQueryFragment,\n  };\n};\n","import { NormalizerConfig } from './types';\n\nexport const defaultConfig: Required<NormalizerConfig> = {\n  getNormalizationObjectKey: obj => obj.id as string | undefined,\n  devLogging: false,\n  structuralSharing: true,\n};\n","import { Data, DataObject, DataPrimitiveArray, UsedKeys } from './types';\n\nexport const denormalize = (\n  data: Data,\n  normalizedData: { [key: string]: Data },\n  usedKeys: UsedKeys,\n  path = '',\n): Data => {\n  if (typeof data === 'string' && data.startsWith('@@')) {\n    return denormalize(normalizedData[data], normalizedData, usedKeys, path);\n  } else if (Array.isArray(data)) {\n    return data.map(value =>\n      denormalize(value, normalizedData, usedKeys, path),\n    ) as DataPrimitiveArray | DataObject[];\n  } else if (\n    data !== null &&\n    typeof data === 'object' &&\n    !(data instanceof Date)\n  ) {\n    const objectEntries = usedKeys[path]\n      ? Object.entries(data).filter(([k]) => usedKeys[path].includes(k))\n      : Object.entries(data);\n\n    return objectEntries.reduce((prev, [k, v]) => {\n      prev[k] = denormalize(v, normalizedData, usedKeys, `${path}.${k}`);\n\n      return prev;\n    }, {} as DataObject);\n  }\n\n  return data;\n};\n","export const getDependenciesDiff = (\n  oldDependencies: ReadonlyArray<string>,\n  newDependencies: ReadonlyArray<string>,\n) => ({\n  addedDependencies: newDependencies.filter(\n    newDependency => !oldDependencies.includes(newDependency),\n  ),\n  removedDependencies: oldDependencies.filter(\n    oldDependency => !newDependencies.includes(oldDependency),\n  ),\n});\n","export const getId = (id: string) => `@@${id}`;\n","import { NormalizedData } from './types';\n\nexport const getQueriesDependentOnMutation = (\n  dependentQueries: NormalizedData['dependentQueries'],\n  mutationDependencies: ReadonlyArray<string>,\n): ReadonlyArray<string> => {\n  const queries: string[] = [];\n\n  mutationDependencies.forEach(dependency => {\n    if (dependentQueries[dependency]) {\n      queries.push(...dependentQueries[dependency]);\n    }\n  });\n\n  return Array.from(new Set(queries));\n};\n","import deepmerge from 'deepmerge';\n\nimport { Data } from './types';\n\nexport const mergeData = <T = Data>(oldData: T, newData: T) =>\n  deepmerge<T>(oldData, newData, {\n    arrayMerge: (destinationArray: Data[], sourceArray: Data[]) => sourceArray,\n    clone: false,\n  });\n","import { defaultConfig } from './default-config';\nimport { mergeData } from './merge-data';\nimport {\n  Data,\n  NormalizerConfig,\n  DataPrimitiveArray,\n  DataObject,\n  UsedKeys,\n} from './types';\n\nconst stipFromDeps = (\n  data: Data,\n  config: Required<NormalizerConfig>,\n  root = true,\n): Data => {\n  if (Array.isArray(data)) {\n    return data.map(v => stipFromDeps(v, config)) as\n      | DataPrimitiveArray\n      | DataObject[];\n  }\n\n  if (data !== null && typeof data === 'object' && !(data instanceof Date)) {\n    const objectKey = config.getNormalizationObjectKey(data);\n\n    if (objectKey !== undefined && root) {\n      return `@@${objectKey}`;\n    }\n\n    return Object.entries(data).reduce((prev, [k, v]) => {\n      prev[k] = stipFromDeps(v, config);\n\n      return prev;\n    }, {} as DataObject);\n  }\n\n  return data;\n};\n\nexport const getDependencies = (\n  data: Data,\n  config = defaultConfig,\n  usedKeys?: UsedKeys,\n  path = '',\n): [DataObject[], UsedKeys] => {\n  usedKeys = usedKeys || {};\n\n  if (Array.isArray(data)) {\n    return [\n      (data as DataObject[]).reduce(\n        (prev: DataObject[], current: Data) => [\n          ...prev,\n          ...getDependencies(current, config, usedKeys, path)[0],\n        ],\n        [] as DataObject[],\n      ),\n      usedKeys,\n    ];\n  }\n\n  if (data !== null && typeof data === 'object' && !(data instanceof Date)) {\n    if (config.getNormalizationObjectKey(data) !== undefined) {\n      usedKeys[path] = Object.keys(data);\n    }\n\n    return [\n      Object.entries(data).reduce(\n        (prev, [k, v]) => [\n          ...prev,\n          ...getDependencies(v, config, usedKeys, `${path}.${k}`)[0],\n        ],\n        config.getNormalizationObjectKey(data) !== undefined ? [data] : [],\n      ),\n      usedKeys,\n    ];\n  }\n\n  return [[], usedKeys];\n};\n\nexport const normalize = (\n  data: Data,\n  config = defaultConfig,\n): [Data, { [objectId: string]: DataObject }, UsedKeys] => {\n  const [dependencies, usedKeys] = getDependencies(data, config);\n\n  return [\n    stipFromDeps(data, config, true),\n    dependencies.reduce(\n      (prev, v) => {\n        const key = config.getNormalizationObjectKey(v) as string;\n\n        prev[`@@${key}`] = prev[`@@${key}`]\n          ? mergeData(prev[`@@${key}`], stipFromDeps(v, config, false))\n          : stipFromDeps(v, config, false);\n\n        return prev;\n      },\n      {} as { [objectId: string]: DataObject },\n    ) as {\n      [objectId: string]: DataObject;\n    },\n    usedKeys,\n  ];\n};\n","const isProduction = process.env.NODE_ENV === 'production';\n\nexport const warning = (show: boolean, ...messages: unknown[]) => {\n  if (!isProduction) {\n    if (show) {\n      console.log(...messages);\n    }\n  }\n};\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export type { NormalizerConfig, Data } from './types';\nexport { createNormalizer } from './create-normalizer';\nexport { getId } from './get-id';\n"],"names":["addOrRemoveDependencies","dependentQueries","objects","queryKey","dependenciesToAdd","dependenciesToRemove","_extends","forEach","dependency","includes","concat","length","filter","v","normalize","denormalize","mergeData","defaultConfig","getQueriesDependentOnMutation","getDependenciesDiff","warning","initialData","queries","isMutationObjectDifferent","mutationData","normalizedData","Array","isArray","some","i","Date","getTime","Object","entries","_ref","key","value","undefined","createNormalizer","normalizerConfig","initialNormalizedData","config","currentDataReferences","setQuery","queryData","_extends2","structuralSharing","_normalize","normalizedQueryData","normalizedObjectsData","usedKeys","_getDependenciesDiff","dependencies","keys","addedDependencies","removedDependencies","data","devLogging","removeQuery","filterMutationObjects","mutationObjects","normalizedDataObjects","differentObjects","getQueriesToUpdate","_normalize2","updatedObjects","normalizedDataWithMutation","foundQueries","map","getQueryFragment","fragment","exampleObject","_normalize3","response","error","RangeError","getObjectById","id","getNormalizedData","clearNormalizedData","getNormalizationObjectKey","obj","path","startsWith","objectEntries","k","reduce","prev","_ref2","oldDependencies","newDependencies","newDependency","oldDependency","getId","mutationDependencies","push","apply","from","Set","deepmerge","oldData","newData","arrayMerge","destinationArray","sourceArray","clone","stipFromDeps","root","objectKey","getDependencies","current","_getDependencies","isProduction","process","env","NODE_ENV","show","_console","_len","arguments","messages","_key","console","log"],"sourceRoot":""}