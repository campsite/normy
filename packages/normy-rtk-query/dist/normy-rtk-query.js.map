{"version":3,"file":"normy-rtk-query.js","mappings":"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","sources":["webpack://NormyRtkQuery/webpack/universalModuleDefinition","webpack://NormyRtkQuery/external umd {\"commonjs\":\"@normy/core\",\"commonjs2\":\"@normy/core\",\"amd\":\"@normy/core\",\"root\":\"Normy\"}","webpack://NormyRtkQuery/external umd {\"commonjs\":\"@reduxjs/toolkit\",\"commonjs2\":\"@reduxjs/toolkit\",\"amd\":\"@reduxjs/toolkit\"}","webpack://NormyRtkQuery/webpack/bootstrap","webpack://NormyRtkQuery/webpack/runtime/compat get default export","webpack://NormyRtkQuery/webpack/runtime/define property getters","webpack://NormyRtkQuery/webpack/runtime/hasOwnProperty shorthand","webpack://NormyRtkQuery/webpack/runtime/make namespace object","webpack://NormyRtkQuery/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@reduxjs/toolkit\"), require(\"@normy/core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@reduxjs/toolkit\", \"@normy/core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NormyRtkQuery\"] = factory(require(\"@reduxjs/toolkit\"), require(\"@normy/core\"));\n\telse\n\t\troot[\"NormyRtkQuery\"] = factory(root[undefined], root[\"Normy\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__reduxjs_toolkit__, __WEBPACK_EXTERNAL_MODULE__normy_core__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__normy_core__;","module.exports = __WEBPACK_EXTERNAL_MODULE__reduxjs_toolkit__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { type Dispatch, type Middleware, isAction } from '@reduxjs/toolkit';\nimport type { createApi } from '@reduxjs/toolkit/query';\nimport {\n  createNormalizer,\n  type Data,\n  type NormalizerConfig,\n} from '@normy/core';\n\nexport { getId } from '@normy/core';\n\ntype GetNormalizerAction = {\n  type: 'getNormalization';\n};\n\nexport const getNormalizer = (\n  dispatch: Dispatch,\n): ReturnType<typeof createNormalizer> =>\n  dispatch({ type: 'getNormalization' }) as unknown as ReturnType<\n    typeof createNormalizer\n  >;\n\ntype QueryFulfilledAction = {\n  type: 'api/executeQuery/fulfilled';\n  payload: Data;\n  meta: {\n    arg: {\n      queryCacheKey: string;\n      originalArgs: unknown;\n    };\n  };\n};\n\ntype QueryRemovedAction = {\n  type: 'api/queries/removeQueryResult';\n  payload: {\n    queryCacheKey: string;\n  };\n};\n\ntype MutationFulfilledAction = {\n  type: 'api/executeMutation/fulfilled';\n  payload: Data;\n  meta: {\n    arg: {\n      queryCacheKey: string;\n      originalArgs: unknown;\n      endpointName: string;\n    };\n  };\n};\n\ntype QueryPatchedAction = {\n  type: 'api/queries/queryResultPatched';\n  payload: {\n    queryCacheKey: string;\n  };\n};\n\ntype NormalizerAction =\n  | GetNormalizerAction\n  | QueryFulfilledAction\n  | QueryRemovedAction\n  | MutationFulfilledAction\n  | QueryPatchedAction;\n\ntype ActionType = NormalizerAction['type'];\n\nconst allTypes: ReadonlyArray<ActionType> = [\n  'api/executeMutation/fulfilled',\n  'api/executeQuery/fulfilled',\n  'api/queries/queryResultPatched',\n  'api/queries/removeQueryResult',\n  'getNormalization',\n];\n\nconst isNormalizerAction = (action: unknown): action is NormalizerAction =>\n  isAction(action) && (allTypes as ReadonlyArray<string>).includes(action.type);\n\nexport const createNormalizationMiddleware = (\n  api: ReturnType<typeof createApi>,\n  normalizerConfig?: Omit<NormalizerConfig, 'structuralSharing'> & {\n    normalizeQuery?: (queryType: string) => boolean;\n    normalizeMutation?: (mutationEndpointName: string) => boolean;\n  },\n): Middleware => {\n  const normalizer = createNormalizer({\n    ...normalizerConfig,\n    // TODO: we wait for rtk-query maintainers to make this work\n    structuralSharing: false,\n  });\n\n  const args: Record<string, unknown> = {};\n\n  return store => next => action => {\n    if (!isNormalizerAction(action)) {\n      return next(action);\n    }\n\n    if (\n      action.type === 'api/queries/queryResultPatched' &&\n      (normalizerConfig?.normalizeQuery?.(action.payload.queryCacheKey) ?? true)\n    ) {\n      const response = next(action);\n\n      normalizer.setQuery(\n        action.payload.queryCacheKey,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        store.getState()[api.reducerPath].queries[action.payload.queryCacheKey]\n          .data as Data,\n      );\n\n      return response;\n    }\n\n    if (action.type === 'getNormalization') {\n      return {\n        ...normalizer,\n        setNormalizedData: (data: Data) => {\n          const queriesToUpdate = normalizer.getQueriesToUpdate(data);\n\n          queriesToUpdate.forEach(query => {\n            const endpoint = query.queryKey.split('(')[0];\n\n            store.dispatch(\n              // @ts-expect-error this is generic api, which is not typed\n              api.util.updateQueryData(\n                // @ts-expect-error this is generic api, which is not typed\n                endpoint,\n                args[query.queryKey],\n                () => query.data,\n              ),\n            );\n          });\n        },\n      };\n    }\n\n    if (\n      action.type === 'api/executeQuery/fulfilled' &&\n      (normalizerConfig?.normalizeQuery?.(action.meta.arg.queryCacheKey) ??\n        true)\n    ) {\n      normalizer.setQuery(action.meta.arg.queryCacheKey, action.payload);\n      args[action.meta.arg.queryCacheKey] = action.meta.arg.originalArgs;\n    } else if (action.type === 'api/queries/removeQueryResult') {\n      normalizer.removeQuery(action.payload.queryCacheKey);\n      delete args[action.payload.queryCacheKey];\n    } else if (\n      action.type === 'api/executeMutation/fulfilled' &&\n      (normalizerConfig?.normalizeMutation?.(action.meta.arg.endpointName) ??\n        true)\n    ) {\n      const queriesToUpdate = normalizer.getQueriesToUpdate(action.payload);\n\n      queriesToUpdate.forEach(query => {\n        const endpoint = query.queryKey.split('(')[0];\n\n        store.dispatch(\n          // @ts-expect-error ddd\n          api.util.updateQueryData(\n            // @ts-expect-error ddd\n            endpoint,\n            args[query.queryKey],\n            () => query.data,\n          ),\n        );\n      });\n    }\n\n    return next(action);\n  };\n};\n"],"names":["isAction","createNormalizer","getId","getNormalizer","dispatch","type","allTypes","isNormalizerAction","action","includes","createNormalizationMiddleware","api","normalizerConfig","normalizer","_extends","structuralSharing","args","store","next","_normalizerConfig$nor","_normalizerConfig$nor2","_normalizerConfig$nor3","normalizeQuery","payload","queryCacheKey","response","setQuery","getState","reducerPath","queries","data","setNormalizedData","queriesToUpdate","getQueriesToUpdate","forEach","query","endpoint","queryKey","split","util","updateQueryData","meta","arg","originalArgs","removeQuery","normalizeMutation","endpointName"],"sourceRoot":""}