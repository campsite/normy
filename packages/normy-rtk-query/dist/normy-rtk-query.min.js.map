{"version":3,"file":"normy-rtk-query.min.js","mappings":"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","sources":["webpack://NormyRtkQuery/webpack/universalModuleDefinition","webpack://NormyRtkQuery/external umd {\"commonjs\":\"@normy/core\",\"commonjs2\":\"@normy/core\",\"amd\":\"@normy/core\",\"root\":\"Normy\"}","webpack://NormyRtkQuery/external umd {\"commonjs\":\"@reduxjs/toolkit\",\"commonjs2\":\"@reduxjs/toolkit\",\"amd\":\"@reduxjs/toolkit\"}","webpack://NormyRtkQuery/webpack/bootstrap","webpack://NormyRtkQuery/webpack/runtime/compat get default export","webpack://NormyRtkQuery/webpack/runtime/define property getters","webpack://NormyRtkQuery/webpack/runtime/hasOwnProperty shorthand","webpack://NormyRtkQuery/webpack/runtime/make namespace object","webpack://NormyRtkQuery/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@reduxjs/toolkit\"), require(\"@normy/core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@reduxjs/toolkit\", \"@normy/core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NormyRtkQuery\"] = factory(require(\"@reduxjs/toolkit\"), require(\"@normy/core\"));\n\telse\n\t\troot[\"NormyRtkQuery\"] = factory(root[undefined], root[\"Normy\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__693__, __WEBPACK_EXTERNAL_MODULE__700__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__700__;","module.exports = __WEBPACK_EXTERNAL_MODULE__693__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { type Dispatch, type Middleware, isAction } from '@reduxjs/toolkit';\nimport type { createApi } from '@reduxjs/toolkit/query';\nimport {\n  createNormalizer,\n  type Data,\n  type NormalizerConfig,\n} from '@normy/core';\n\nexport { getId } from '@normy/core';\n\ntype GetNormalizerAction = {\n  type: 'getNormalization';\n};\n\nexport const getNormalizer = (\n  dispatch: Dispatch,\n): ReturnType<typeof createNormalizer> =>\n  dispatch({ type: 'getNormalization' }) as unknown as ReturnType<\n    typeof createNormalizer\n  >;\n\ntype QueryFulfilledAction = {\n  type: 'api/executeQuery/fulfilled';\n  payload: Data;\n  meta: {\n    arg: {\n      queryCacheKey: string;\n      originalArgs: unknown;\n    };\n  };\n};\n\ntype QueryRemovedAction = {\n  type: 'api/queries/removeQueryResult';\n  payload: {\n    queryCacheKey: string;\n  };\n};\n\ntype MutationFulfilledAction = {\n  type: 'api/executeMutation/fulfilled';\n  payload: Data;\n  meta: {\n    arg: {\n      queryCacheKey: string;\n      originalArgs: unknown;\n      endpointName: string;\n    };\n  };\n};\n\ntype QueryPatchedAction = {\n  type: 'api/queries/queryResultPatched';\n  payload: {\n    queryCacheKey: string;\n  };\n};\n\ntype NormalizerAction =\n  | GetNormalizerAction\n  | QueryFulfilledAction\n  | QueryRemovedAction\n  | MutationFulfilledAction\n  | QueryPatchedAction;\n\ntype ActionType = NormalizerAction['type'];\n\nconst allTypes: ReadonlyArray<ActionType> = [\n  'api/executeMutation/fulfilled',\n  'api/executeQuery/fulfilled',\n  'api/queries/queryResultPatched',\n  'api/queries/removeQueryResult',\n  'getNormalization',\n];\n\nconst isNormalizerAction = (action: unknown): action is NormalizerAction =>\n  isAction(action) && (allTypes as ReadonlyArray<string>).includes(action.type);\n\nexport const createNormalizationMiddleware = (\n  api: ReturnType<typeof createApi>,\n  normalizerConfig?: Omit<NormalizerConfig, 'structuralSharing'> & {\n    normalizeQuery?: (queryType: string) => boolean;\n    normalizeMutation?: (mutationEndpointName: string) => boolean;\n  },\n): Middleware => {\n  const normalizer = createNormalizer({\n    ...normalizerConfig,\n    // TODO: we wait for rtk-query maintainers to make this work\n    structuralSharing: false,\n  });\n\n  const args: Record<string, unknown> = {};\n\n  return store => next => action => {\n    if (!isNormalizerAction(action)) {\n      return next(action);\n    }\n\n    if (\n      action.type === 'api/queries/queryResultPatched' &&\n      (normalizerConfig?.normalizeQuery?.(action.payload.queryCacheKey) ?? true)\n    ) {\n      const response = next(action);\n\n      normalizer.setQuery(\n        action.payload.queryCacheKey,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        store.getState()[api.reducerPath].queries[action.payload.queryCacheKey]\n          .data as Data,\n      );\n\n      return response;\n    }\n\n    if (action.type === 'getNormalization') {\n      return {\n        ...normalizer,\n        setNormalizedData: (data: Data) => {\n          const queriesToUpdate = normalizer.getQueriesToUpdate(data);\n\n          queriesToUpdate.forEach(query => {\n            const endpoint = query.queryKey.split('(')[0];\n\n            store.dispatch(\n              // @ts-expect-error this is generic api, which is not typed\n              api.util.updateQueryData(\n                // @ts-expect-error this is generic api, which is not typed\n                endpoint,\n                args[query.queryKey],\n                () => query.data,\n              ),\n            );\n          });\n        },\n      };\n    }\n\n    if (\n      action.type === 'api/executeQuery/fulfilled' &&\n      (normalizerConfig?.normalizeQuery?.(action.meta.arg.queryCacheKey) ??\n        true)\n    ) {\n      normalizer.setQuery(action.meta.arg.queryCacheKey, action.payload);\n      args[action.meta.arg.queryCacheKey] = action.meta.arg.originalArgs;\n    } else if (action.type === 'api/queries/removeQueryResult') {\n      normalizer.removeQuery(action.payload.queryCacheKey);\n      delete args[action.payload.queryCacheKey];\n    } else if (\n      action.type === 'api/executeMutation/fulfilled' &&\n      (normalizerConfig?.normalizeMutation?.(action.meta.arg.endpointName) ??\n        true)\n    ) {\n      const queriesToUpdate = normalizer.getQueriesToUpdate(action.payload);\n\n      queriesToUpdate.forEach(query => {\n        const endpoint = query.queryKey.split('(')[0];\n\n        store.dispatch(\n          // @ts-expect-error ddd\n          api.util.updateQueryData(\n            // @ts-expect-error ddd\n            endpoint,\n            args[query.queryKey],\n            () => query.data,\n          ),\n        );\n      });\n    }\n\n    return next(action);\n  };\n};\n"],"names":["root","factory","exports","module","require","define","amd","undefined","self","__WEBPACK_EXTERNAL_MODULE__693__","__WEBPACK_EXTERNAL_MODULE__700__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","getNormalizer","dispatch","type","allTypes","createNormalizationMiddleware","api","normalizerConfig","normalizer","createNormalizer","_extends","structuralSharing","args","store","next","action","_normalizerConfig$nor","_normalizerConfig$nor2","_normalizerConfig$nor3","isAction","includes","isNormalizerAction","normalizeQuery","payload","queryCacheKey","response","setQuery","getState","reducerPath","queries","data","setNormalizedData","getQueriesToUpdate","forEach","query","endpoint","queryKey","split","util","updateQueryData","meta","arg","removeQuery","normalizeMutation","endpointName","originalArgs"],"sourceRoot":""}